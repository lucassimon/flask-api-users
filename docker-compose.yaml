version: "3.5"
services:
  test: &defaults
    build:
      context: .
      target: ci
    volumes:
      - .:/home/app/
    command: pytest -s -vvv
    env_file:
      - ./.docker/dev.env
      - ./.docker/test.env

  app:
    <<: *defaults
    build:
      context: .
      target: dev
    # volumes:
    #   - .:/home/app
    #   - ./venv:/home/app/venv
    command: flask run --host=0.0.0.0 --port=8080
    # command: tail -f /dev/null
    working_dir: /home/app
    ports:
      - "5000:8080"
    env_file:
      - ./.docker/dev.env
    depends_on:
      - mongodb

  ci:
    <<: *defaults
    build:
      context: .
      target: ci
    command:
      - /bin/sh
      - c
      - |
        pytest
    volumes: []

  mongodb:
      image: mongo
      ports:
      - "27017:27017"

  redis:
    image: redis
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  graylog:
    image: graylog/graylog
    volumes:
      - graylog_data:/usr/share/graylog/data
    env_file:
      - ./.docker/graylog/dev.env
    restart: always
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 12200:9000
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp


volumes:
  dependencies: {}
  mongo_data:
  es_data:
